<?php
/**
 * Created by PhpStorm.
 * User: DBenitezc
 * Date: 23/05/2019
 * Time: 06:33 PM
 */

namespace App\Models\MODULOSSAO\ControlRemesas;


use App\Models\CADECO\Finanzas\DistribucionRecursoRemesa;
use App\Models\MODULOSSAO\BaseDatos\BaseDato;
use App\Models\MODULOSSAO\BaseDatosObra;
use App\Models\MODULOSSAO\Proyectos\Proyecto;
use Illuminate\Database\Eloquent\Model;

class Remesa extends Model
{

    protected $connection = 'modulosao';
    protected $table = 'ControlRemesas.Remesas';
    protected $primaryKey = 'IDRemesa';
    public $timestamps = false;

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::addGlobalScope(function ($query){
            $base = BaseDatosObra::with('proyectosUnificados')->first();
            return $base->proyectosUnificados? $query->whereIn('IDProyecto',  $base->ids_proyectos_unificados): abort(403, 'La obra no tiene registro en la tabla de proyectos unificados.');
        });
    }

    /**
     * Relaciones
     */
    public function documento()
    {
        return $this->hasMany(Documento::class, 'IDRemesa', 'IDRemesa');
    }

    public function proyecto()
    {
        return $this->belongsTo(Proyecto::class, 'IDProyecto', 'IDProyecto');
    }

    public function remesaLiberada()
    {
        return $this->belongsTo(RemesaLiberada::class, 'IDRemesa', 'IDRemesa');
    }

    public function distribucionRemesa(){
        return $this->hasMany(DistribucionRecursoRemesa::class, 'id_remesa', 'IDRemesa');
    }

    /**
     * Scopes
     */
    public function scopeLiberada($query)
    {
        return $query->has('remesaLiberada');
    }

    public function scopeOrdinaria($query)
    {
        return $query->where('IDTipoRemesa', 1);
    }

    public function scopeExtraordinaria($query)
    {
        return $query->where('IDTipoRemesa', 2);
    }

    public function scopeSolicitada($query)
    {
        return $query->where('IDEstadoRemesa', 2);
    }

    /**
     * Atributos
     */
    public function getTipoAttribute(){
        if($this->IDTipoRemesa == 1){
            return 'Ordinaria';
        }
        if($this->IDTipoRemesa == 2){
            return 'Extraordinaria';
        }
        return null;
    }

    public function getMontoTotalSolicitadoAttribute()
    {
        $remesas =  $this->documento()->withoutGlobalScopes()->seleccionado()->selectRaw('SUM(MontoTotalSolicitado) as monto_total')->first();
        return $remesas->monto_total;
    }

    public function getNombreProyectoAttribute()
    {
        try {
            return $this->proyecto->Nombre;
        } catch (\Exception $e) {
            return null;
        }
    }

    /**
     * MÃ©todos
     */
}
