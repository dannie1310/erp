<?php


namespace App\Models\MODULOSSAO\ControlRemesas;


use App\Models\MODULOSSAO\BaseDatosObra;
use App\Models\MODULOSSAO\Proyectos\Proyecto;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\DB;

class RemesaFolio extends Model
{
    protected $connection = 'modulosao';
    protected $table = 'ControlRemesas.RemesasFolios';
    public $timestamps = false;
    protected $fillable = [
        'CantidadExtraordinariasPermitidas',
        'MontoLimiteExtraordinarias'
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::addGlobalScope(function ($query){
            $proyectos = Proyecto::porUsuario()->orderBy('Nombre')->pluck('IdProyecto');
            return $query->whereIn('IDProyecto', $proyectos);
        });
    }

    /**
     * Relaciones
     */
    public function proyecto()
    {
        return $this->belongsTo(Proyecto::class, 'IDProyecto', 'IDProyecto');
    }

    /**
     * Scope
     */
    public function scopeOrdenarPorAnioSemana($query)
    {
        return $query->orderBy('Anio','desc')->orderBy('NumeroSemana','desc');
    }

    /**
     * Atributos
     */
    public function getNombreProyectoAttribute()
    {
        try{
            return $this->proyecto->Nombre;
        }catch (\Exception $e){
            return null;
        }
    }

    /**
     * MÃ©todos
     */
    public function editar(array $data)
    {
        try {
            DB::connection('modulosao')->beginTransaction();
            $this->update([
               'CantidadExtraordinariasPermitidas' => $data['cantidad_limite'],
               'MontoLimiteExtraordinarias' => $data['monto_limite']
            ])->where('IDProyecto', $data['id_proyecto'])->where('Anio', $data['anio'])->where('NumeroSemana', $data['numero_semana']);
            DB::connection('modulosao')->commit();
            return $this;
        } catch (\Exception $e) {
            DB::connection('modulosao')->rollBack();
            abort(400, $e->getMessage());
        }
    }

    public function validarEdicion()
    {
        if($this->Anio != date('Y') && $this->NumeroSemana != date('W')+1)
        {
            abort(400, "No se puede editar limite de remesa extraordinaria a semanas anteriores a la actual.");
        }
    }
}
